<!-- 
/*******************************************************************************
 *  # Copyright (c) 2016 {UPRC}.
 *  # All rights reserved. This program and the accompanying materials
 *  # are made available under the terms of the The MIT License (MIT).
 *  # which accompanies this distribution, and is available at
 *  # http://opensource.org/licenses/MIT
 *
 *  # Contributors:
 *  #    {Constantinos Patsakis} {UPRC}
 *  #    {Stamatis Glykos} {UPRC}
 *  #    {Constantinos Alexandris} {UPRC}
 *  # Initially developed in the context of OPERANDO EU project www.operando.eu 
 *******************************************************************************/
 -->
 
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>

	<groupId>eu.operando</groupId>
	<artifactId>eu.operando.pdr.dan.server</artifactId>
	<packaging>war</packaging>
	<name>eu.operando.pdr.dan.server</name>
	<version>1.0.0</version>
	
	<properties>
		<springframework.version>4.3.0.RELEASE</springframework.version>
		<javax.version>2.0.5</javax.version>
		<odata.version>1.2.0</odata.version>
		<mysql.version>5.1.23</mysql.version>
		<slf4j.version>1.7.7</slf4j.version>
		<cxf.version>2.7.5</cxf.version>
		<jersey.version>2.2</jersey.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<servlet-api-version>2.5</servlet-api-version>
		<!-- added to support docker image creation -->
		<docker.registry.name>localhost:5000/</docker.registry.name><!-- leave 
			empty for docker hub; use e.g. "localhost:5000/" for a local docker registry -->
		<docker.repository.name>${docker.registry.name}tecnalia/eu.operando.pdr.dan.server</docker.repository.name>
		<docker.logdb.port>8111</docker.logdb.port>
		<user.warName>operando#pdr#dan</user.warName>
		<as.baseurl>http://localhost:8080</as.baseurl>
		<dan.baseurl>http://localhost:8080</dan.baseurl>
		<ldb.baseurl>http://localhost:8080</ldb.baseurl>
 	    <rm.baseurl>http://localhost:8080</rm.baseurl>
		<as.gkusername>operando</as.gkusername>
		<as.gkpassword>1234</as.gkpassword>
		<packaging.type>jar</packaging.type>
		<mysql.host>localhost</mysql.host>
        <mysql.port>3306</mysql.port>
 		<mysql.dbname>operando_dan</mysql.dbname>
		<!-- end of addition -->
	</properties>
	
	<profiles>
		<profile>
			<id>jenkins-dev</id>
			<activation>
				<property>
					<name>ci</name>
				</property>
			</activation>
			<properties>
				<as.baseurl>http://integration.operando.dmz.lab.esilab.org:8101/operando/core/as</as.baseurl>
				<dan.baseurl>http://integration.operando.dmz.lab.esilab.org:8111/operando/pdr/dan</dan.baseurl>
				<ldb.baseurl>http://integration.operando.dmz.lab.esilab.org:8090/operando/core/ldb</ldb.baseurl>
	 	        <rm.baseurl>http://integration.operando.dmz.lab.esilab.org:8102/operando/core/rm</rm.baseurl>
				<as.gkusername>operando</as.gkusername>
				<as.gkpassword>1234</as.gkpassword>
	        	<mysql.host>mysql.integration.operando.dmz.lab.esilab.org</mysql.host>
			</properties>
		</profile>
	</profiles>
	
	<dependencies>
		<!-- Spring Framework -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${springframework.version}</version>
		</dependency>

		<!-- JSON serializer/deserializer <dependency> <groupId>com.fasterxml.jackson.core</groupId> 
			<artifactId>jackson-databind</artifactId> <version>${jackson-version}</version> 
			</dependency> -->

		<!-- Http Client -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.2</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.yaml/snakeyaml -->
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>1.17</version>
		</dependency>

		<!-- Operando modules -->
		<dependency>
			<groupId>eu.operando</groupId>
			<artifactId>eu.operando.core.ldb.client</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>eu.operando</groupId>
			<artifactId>eu.operando.interfaces.aapi.client</artifactId>
			<version>1.0.0</version>
		</dependency>
	 <dependency>
	  <groupId>log4j</groupId>
	  <artifactId>log4j</artifactId>
	  <version>1.2.17</version>
	 </dependency>
	</dependencies>

	<build>
	<plugins>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>2.5.1</version>
			<inherited>true</inherited>
			<configuration>
				<source>1.7</source>
				<target>1.7</target>
			</configuration>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-war-plugin</artifactId>
			<version>2.1.1</version>
			<configuration>
				<!-- added to support right path -->
				<warName>${user.warName}</warName>
				<!-- end of addition -->
			</configuration>
		</plugin>
		<!-- added to support docker image creation -->
		<plugin>
			<groupId>org.jolokia</groupId>
			<artifactId>docker-maven-plugin</artifactId>
			<version>0.13.9</version> <!-- last version in https://mvnrepository.com/artifact/org.jolokia/docker-maven-plugin -->
			<configuration>
				<images>
					<image>
						<alias>eu.operando.pdr.dan</alias>
						<name>${docker.repository.name}:${project.version}</name>
						<build>
							<from>tomcat:7</from> <!-- in our case we start from tomcat image -->
							<assembly>
								<basedir>/</basedir>
								<descriptor>docker-assembly.xml</descriptor>
							</assembly>
							<ports>
								<port>8080</port>
							</ports>
						</build>
						<run>
							<namingStrategy>alias</namingStrategy>
							<ports>
								<port>${docker.logdb.port}:8080</port>
							</ports>
						</run>
					</image>
				</images>
			</configuration>
		</plugin>
		<!-- end of addition -->
		    <!-- added to support initial database creation -->
    	    <plugin>
		        <groupId>org.codehaus.mojo</groupId>
		        <artifactId>sql-maven-plugin</artifactId>
		        <version>1.5</version>
		        <dependencies>
		          <!-- specify the dependent JDBC driver here -->
		          <dependency>
         			<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
					<version>5.0.8</version>
		          </dependency>
		        </dependencies>
		        <!-- common configuration shared by all executions -->
		        <configuration>
		          <driver>com.mysql.jdbc.Driver</driver>
		          <url>jdbc:mysql://${mysql.host}:${mysql.port}/${mysql.dbname}</url>
		          <username>root</username>
		          <password>root</password>
		        </configuration>	
		        <executions>
		          <execution>
		            <id>default-cli</id>
		            <phase>initalize</phase>
		            <goals>
		              <goal>execute</goal>
		            </goals>
		            <!-- specific configuration for this execution -->
		            <configuration>
		              <!-- specify your SQL commands, can be all of the following configurations -->
		              <srcFiles>
		                <srcFile>src/main/sql/creation.sql</srcFile>
		              </srcFiles>
		            </configuration>
		          </execution>
		        </executions>
		      </plugin>
			<!-- end of addition -->		
		
	</plugins>		

	</build>
</project>
