<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<modelVersion>4.0.0</modelVersion>
	<groupId>eu.operando</groupId>
	<artifactId>eu.operando.pdr.rpm.server</artifactId>
	<packaging>war</packaging>
	<name>eu.operando.core.ldb.server</name>
	<version>1.0.0</version>

	<properties>
		<javax.version>2.0.5</javax.version>
		<odata.version>1.2.0</odata.version>
		<mysql.version>5.1.23</mysql.version>
		<slf4j.version>1.7.7</slf4j.version>
		<cxf.version>2.7.5</cxf.version>
		<jersey.version>2.2</jersey.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<servlet-api-version>2.5</servlet-api-version>
		<!-- added to support docker image creation -->
		<docker.registry.name>localhost:5000/</docker.registry.name><!-- leave 
			empty for docker hub; use e.g. "localhost:5000/" for a local docker registry -->
		<docker.repository.name>${docker.registry.name}tecnalia/eu.operando.pdr.rpm.server</docker.repository.name>
		<docker.logdb.port>8112</docker.logdb.port>
		<user.warName>operando#pdr#rpm</user.warName>
		<as.baseurl>http://localhost:8080</as.baseurl>
		<dan.baseurl>http://localhost:8080</dan.baseurl>
		<ldb.baseurl>http://localhost:8080</ldb.baseurl>
 	    <rm.baseurl>http://localhost:8080</rm.baseurl>
		<as.gkusername>operando</as.gkusername>
		<as.gkpassword>1234</as.gkpassword>
		<packaging.type>jar</packaging.type>
		<!-- end of addition -->
	</properties>
	
	<profiles>
		<profile>
			<id>jenkins-dev</id>
			<activation>
				<property>
					<name>ci</name>
				</property>
			</activation>
			<properties>
				<as.baseurl>http://10.0.0.5:8101/operando/core/as</as.baseurl>
				<dan.baseurl>http://10.0.0.5:8111/operando/pdr/dan</dan.baseurl>
				<ldb.baseurl>http://10.0.0.5:8090/operando/core/ldb</ldb.baseurl>
	 	        <rm.baseurl>http://10.0.0.5:8102/operando/core/rm</rm.baseurl>
				<as.gkusername>operando</as.gkusername>
				<as.gkpassword>1234</as.gkpassword>
			</properties>
		</profile>
	</profiles>
	
	<dependencies>

		<dependency>
			<groupId>org.apache.olingo</groupId>
			<artifactId>olingo-odata2-api</artifactId>
			<version>${odata.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.olingo</groupId>
			<artifactId>olingo-odata2-api-annotation</artifactId>
			<version>${odata.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.olingo</groupId>
			<artifactId>olingo-odata2-core</artifactId>
			<version>${odata.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.olingo</groupId>
			<artifactId>olingo-odata2-jpa-processor-api</artifactId>
			<version>${odata.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.olingo</groupId>
			<artifactId>olingo-odata2-jpa-processor-core</artifactId>
			<version>${odata.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>javax.persistence</artifactId>
			<version>${javax.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>2.0-m10</version>
		</dependency>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-api</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-bindings-xml</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-core</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
			<version>${cxf.version}</version>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.6</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>eclipselink</artifactId>
			<version>2.6.3</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>

		<!-- Operando modules -->
		<dependency>
			<groupId>eu.operando</groupId>
			<artifactId>eu.operando.core.ldb.client</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>eu.operando</groupId>
			<artifactId>eu.operando.interfaces.aapi.client</artifactId>
			<version>1.0.0</version>
		</dependency>
	</dependencies>

	<build>
	<finalName>op-pdr-rpm</finalName>
	<plugins>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>2.5.1</version>
			<inherited>true</inherited>
			<configuration>
				<source>1.7</source>
				<target>1.7</target>
			</configuration>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-war-plugin</artifactId>
			<version>2.1.1</version>
			<configuration>
				<!-- added to support right path -->
				<warName>${user.warName}</warName>
				<!-- end of addition -->
			</configuration>
		</plugin>
		<!-- added to support docker image creation -->
		<plugin>
			<groupId>org.jolokia</groupId>
			<artifactId>docker-maven-plugin</artifactId>
			<version>0.13.9</version> <!-- last version in https://mvnrepository.com/artifact/org.jolokia/docker-maven-plugin -->
			<configuration>
				<images>
					<image>
						<alias>eu.operando.pdr.rpm</alias>
						<name>${docker.repository.name}:${project.version}</name>
						<build>
							<from>tomcat:7</from> <!-- in our case we start from tomcat image -->
							<assembly>
								<basedir>/</basedir>
								<descriptor>docker-assembly.xml</descriptor>
							</assembly>
							<ports>
								<port>8080</port>
							</ports>
						</build>
						<run>
							<namingStrategy>alias</namingStrategy>
							<ports>
								<port>${docker.logdb.port}:8080</port>
							</ports>
						</run>
					</image>
				</images>
			</configuration>
		</plugin>
		<!-- end of addition -->
	</plugins>		
	</build>
</project>
